Of course there are mirror routines htons() and htonl() to go from "host" to "network" - how do these compare to the ntoh* routines? Are the conversions done by the ntoh* routines reversible or does the library have to include different code for the hton* variants - think about that for a bit (this is an essay question, you don't have to write those routines).  

These functions going from host -> network would actually be exactly the same, as reversing the operating can be done just by doing the operation again, we can see this by switching our tests, making the expected output the input, and the input the expected output. All the tests still pass when we do this. This means that converting between the two is a bidirectional operation and can be done either way. Because we are swapping bytes of symmetrical data this allows for the reversibility, if for some reason the data was not symmetrical then the techniques used would need to be different. 

The functions are declared as unsigned above, is this important?  What if they aren't declared that way?

If the data were signed that would mean an extra bit to keep track of the signage. This extra bit could then be swapped into the number when passing it to ntoh* or hton* meaning that the signage bit would be lost inside the data. Using unsigned data means this wonâ€™t be a concern. If they were not declared as unsigned then it would be possible for these errors to occur, the functions themselves would also have to work differently. This error occurrence would become problematic as the functions are used if the unsigned was not part of the declaration. 
